# Fixed problems:
# Kafka listener misconfiguration — KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 only works from the host machine, not other containers (like NestJS).
# Healthcheck command for Kafka is not reliable (requires topics; often fails before broker ready).
# No networks defined — defaults to one but unclear; explicit is better.
# No environment variables for service-to-service connections (e.g., how NestJS connects to Kafka/Postgres).
# Missing restart policies — production or dev containers should auto-restart if crashed.
# No resource constraints / minimal tuning for Postgres.
# No .env integration for sensitive data or customization.
version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: token-price-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-tokens}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - token-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: token-price-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - token-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: token-price-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Internal listener (for other containers)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - token-network

  # Optional: Admin UI for Kafka debugging (very helpful in dev)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: token-price-kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
